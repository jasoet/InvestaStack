<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
         http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">


    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven/>

    <!-- mengganti default servletnya Tomcat dan Jetty -->
    <!-- ini diperlukan kalau kita mapping DispatcherServlet ke / -->
    <!-- sehingga tetap bisa mengakses folder selain WEB-INF, misalnya img,
         css, js -->
    <mvc:default-servlet-handler/>
    <context:component-scan base-package="com.secondstack.investa.controller"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- Maksimal Upload 10 MB -->
        <property name="maxUploadSize" value="10000000"/>
    </bean>

    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver" p:order="0">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
    </bean>
    <bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/layouts/layouts.xml</value>
                <value>/WEB-INF/views/views.xml</value>
                <!-- Scan views directory for Tiles configurations -->
                <value>/WEB-INF/views/**/views.xml</value>
            </list>
        </property>
    </bean>
    <!--
        <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
            <property name="prefix" value="/WEB-INF/jsp/"/>
            <property name="suffix" value=".jsp"/>
            <property name="order" value="1"/>
        </bean>

        &lt;!&ndash;UNTUK REPORT&ndash;&gt;
        <bean id="jasperViewResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
            <property name="basenames">
                <list>
                    <value>jasperreports</value>
                </list>
            </property>
            <property name="order" value="0"/>
        </bean>

        <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
            <property name="velocityProperties">
                <value>
                    resource.loader = classpath
                    classpath.resource.loader.class = org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                </value>
            </property>
        </bean>-->
</beans>
