<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd   http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">


    <beans profile="repository">

        <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>

        <bean id="databaseProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="locations">
                <list>
                    <!-- Order matters, last one to create a property wins! -->
                    <value>classpath:database.properties</value>
                    <value>classpath:email.properties</value>
                    <value>classpath:messages.properties</value>
                    <value>classpath:report.properties</value>
                </list>
            </property>
        </bean>

        <context:property-placeholder properties-ref="databaseProperties"/>
        <!--<jpa:repositories base-package="com.secondstack.*.repository"/>-->
        <context:component-scan base-package="com.secondstack.*.dao"/>
        <context:component-scan base-package="com.secondstack.*.service"/>

        <bean id="initDataProvider" class="com.secondstack.investa.util.provider.InitialDataProvider"/>

        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
              destroy-method="close" p:driverClassName="${jdbc.driver}" p:url="${jdbc.url}"
              p:username="${jdbc.username}" p:password="${jdbc.password}" p:maxWait="40000"
              p:maxActive="80" p:maxIdle="20"/>

        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
              p:dataSource-ref="dataSource"
                />

        <bean id="transactionManager"
              class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManager"/>

        <bean id="entityManager" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="dataSource">
            <property name="packagesToScan" value="com.secondstack.*.domain"/>

            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                    <prop key="hibernate.show_sql">false</prop>
                    <prop key="hibernate.format_sql">false</prop>
                    <prop key="hibernate.hbm2ddl.auto">update</prop>
                </props>
            </property>
        </bean>

        <tx:annotation-driven/>

        <task:scheduled-tasks>
            <task:scheduled ref="monthlyProfitService" method="process" cron="0 0 0 21 * ?"/>
            <task:scheduled ref="emailSenderService" method="run" cron="*/20 * * * * *"/>
            <task:scheduled ref="userCheckerService" method="check" cron="0 0 12 * * *"/>
        </task:scheduled-tasks>

        <bean id="configUtil" class="com.secondstack.investa.util.ConfigUtil"
              p:reportProfitRekLocation="${report.profitrek.location}"
              p:reportBonusRekLocation="${report.bonusrek.location}"
              p:reportBonusLocation="${report.bonus.location}"
              p:reportProfitLocation="${report.profit.location}"
              p:reportBackupLocation="${report.backup.location}"/>


        <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
            <property name="host" value="${email.host}"/>
            <property name="port" value="${email.port}"/>
            <property name="protocol" value="${email.protocol}"/>
            <property name="username" value="${email.username}"/>
            <property name="password" value="${email.password}"/>
            <property name="javaMailProperties">
                <props>
                    <prop key="mail.smtp.auth">true</prop>
                    <prop key="mail.smtp.starttls.enable">true</prop>
                    <prop key="mail.smtp.quitwait">false</prop>
                </props>
            </property>

        </bean>

        <bean id="mailTemplate" class="org.springframework.mail.SimpleMailMessage">
            <property name="from" value="${email}"/>
        </bean>

        <bean id="messageSource"
              class="org.springframework.context.support.ResourceBundleMessageSource">
            <property name="basenames">
                <list>
                    <value>messages</value>
                </list>
            </property>
        </bean>
    </beans>

</beans>
